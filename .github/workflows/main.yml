name: Build, Push and Deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  DOCKER_IMAGE: jhowssilva/conversao-distancia
  AZURE_RESOURCE_GROUP: Bootcamp
  AKS_CLUSTER: Bootcamp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # NecessÃ¡rio para git describe
      
      - name: Get version tag
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git describe --tags --always --dirty || echo "latest")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: src
          file: src/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
            ${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test Docker image
        run: |
          echo "Testing image pull..."
          docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
          echo "Testing container startup..."
          docker run --rm ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }} echo "Container test OK"
      
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER }}
      
      - name: Update deployment image
        run: |
          kubectl set image deployment/conversao-distancia \
            conversao-distancia=${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
          kubectl rollout status deployment/conversao-distancia --timeout=300s
      
      - name: Verify deployment
        run: |
          kubectl get pods -l app=conversao-distancia
          kubectl describe deployment conversao-distancia
